{"version":3,"sources":["logo.svg","components/login.js","components/profile.js","components/websocket.js","cookie.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","LoginForm","props","handleLogin","event","preventDefault","console","log","target","name","value","data","password","username","axios","post","then","res","resp_data","setLoggedIn","setStatus","handleRegister","password1","password2","email","Container","className","style","width","marginTop","as","Row","Form","onSubmit","this","Group","controlId","Control","type","placeholder","Button","variant","React","Component","Profile","setUserdata","setState","phone","phone_number","age","submitData","response","handleLogout","checkLoggedin","state","get","Table","striped","bordered","hover","onClick","socketPath","window","location","host","WebsocketComponent","setupWebSocket","ws","WebSocket","onopen","send","JSON","stringify","abcd","onmessage","evt","parse","message","onclose","setTimeout","getCookie","cookieValue","document","cookie","cookies","split","i","length","jQuery","trim","substring","decodeURIComponent","setCsrfToken","_csrfToken","defaults","headers","common","xsrfCookieName","xsrfHeaderName","withCredentials","App","logged_in","status","catch","err","class","dot_class","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.821a66c9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport axios from 'axios';\nimport { Button,Form,Row, Col, Container } from 'react-bootstrap';\n\nconst csrf_url = \"csrf/\";\nconst base_url = \"http://127.0.0.1:8000/\";\nconst login_url = \"login/\";\nconst signup_url = \"signup/\";\nconst logged_in_check_url = \"logged_in/\";\n\nclass LoginForm extends React.Component {\n  constructor(props){\n    super(props);\n }\n    handleLogin = (event) =>{\n      event.preventDefault();\n      console.log(event.target.name.value)\n      const data = {\n            password: event.target.password.value,\n            username: event.target.username.value,\n        }\n      axios.post(login_url, data, )\n      .then(res => {\n        const resp_data = res.data;\n        console.log(resp_data);\n        this.props.setLoggedIn(true);\n        this.props.setStatus(\"logged_in\");\n      })\n      \n    }\n\n    handleRegister = (event) =>{\n      event.preventDefault();\n        console.log(event.target.name.value);\n        const data = {\n            username: event.target.username.value,\n              password1: event.target.password.value,\n              password2: event.target.password.value,\n              email: event.target.email.value,\n          }\n          axios.post(signup_url, data)\n          .then(res => {\n            const resp_data = res.data;\n            this.props.setLoggedIn(true);\n          })\n    }\n  \n    render() {\n      return (\n          <div>\n        <Container className=\"text-center\" style={{width: \"75%\", marginTop: \"3%\"}}>\n\t\t\t  <h4 as={Row}>Login</h4>\n\t\t\t\t<Form onSubmit={this.handleLogin}>\n\t\t\t\t<Form.Group as={Row} controlId=\"username\">\n\t\t\t\t    <Form.Control type=\"text\" placeholder=\"User Name\"/>\n\t\t\t\t  </Form.Group>\n\t\t\t\t  <Form.Group as={Row} controlId=\"password\">\n\t\t\t\t   <Form.Control type=\"password\" placeholder=\"Password\"/>\n\t\t\t\t  \t</Form.Group>\n\t\t\t\t\t  \n\n\t\t\t\t  <Container>\n\t\t\t\t  <Button variant=\"primary\" type=\"submit\" className=\"login-button\">Login</Button>\n\t\t\t\t  </Container>\n\t\t\t\t</Form>\n\t\t\t\t</Container>\n\n        <Container className=\"text-center\" style={{width: \"75%\", marginTop: \"3%\"}}>\n\t\t\t  <h4 as={Row}>New account</h4>\n\t\t\t\t<Form onSubmit={this.handleRegister}>\n\t\t\t\t<Form.Group as={Row} controlId=\"username\">\n\t\t\t\t    <Form.Control type=\"text\" placeholder=\"User Name\"/>\n\t\t\t\t  </Form.Group>\n          <Form.Group as={Row} controlId=\"email\">\n\t\t\t\t   <Form.Control type=\"email\" placeholder=\"Email\"/>\n\t\t\t\t  \t</Form.Group>\n\t\t\t\t  <Form.Group as={Row} controlId=\"password\">\n\t\t\t\t   <Form.Control type=\"password\" placeholder=\"Password\"/>\n\t\t\t\t  \t</Form.Group>\n\t\t\t\t\t  <Container>\n\t\t\t\t  <Button variant=\"primary\" type=\"submit\" className=\"login-button\">Register</Button>\n\t\t\t\t  </Container>\n\t\t\t\t</Form>\n\t\t\t\t</Container>\n    </div>\n      );\n    }\n  }\n  export default LoginForm;","import React from 'react';\nimport axios from 'axios';\nimport { Button,Form,Row, Col,Container } from 'react-bootstrap';\nimport Table from 'react-bootstrap/Table';\nconst logged_out_url = \"logout/\";\nconst userdata_url = \"user/\";\nconst logged_in_check_url = \"logged_in/\";\nconst submit_data_url = \"user/edit/\";\nclass Profile extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      username: \"username\",\n      email: \"email\",\n      phone: 0,\n      age: 0,\n    };\n  }\n    componentDidMount(){\n        axios.get(userdata_url)\n          .then(response => {\n          console.log(response);\n          this.setUserdata(response.data);\n          console.log(this.state);\n      });\n    }\n\n setUserdata = (data) =>{\n   this.setState({\n     username: data.username,\n     phone: data.phone_number,\n     age: data.age,\n     email: data.email,\n  });\n }\n submitData = (event) =>{\n  event.preventDefault();\n  let data = {\n    phone_number: event.target.phone.value,\n    age: event.target.age.value,\n    email: event.target.email.value,\n  }\n  event.target.phone.value=\"\";\n  event.target.age.value=\"\";\n  event.target.email.value=\"\";\n  axios.post(submit_data_url, data)\n  .then(response => {\n  console.log(response);\n  this.setUserdata(response.data);\n});\n }\n  handleLogout = (event) =>{\n      event.preventDefault();\n      axios.post(logged_out_url)\n      .then(response => {\n      console.log(response);\n      this.props.setLoggedIn(false);\n  });\n    }\n    checkLoggedin = (event) =>{\n      axios.post(logged_in_check_url)\n      .then(response => {\n      console.log(response);\n      this.setLoggedIn(true);\n  });\n    }\n\n  \n    render() {\n      return (\n        <div>\n  <Container className=\"text-center\" style={{width: \"75%\", marginTop: \"2%\"}}>\n  <h3>User Info</h3>\n  <Table striped bordered hover>\n  <tbody>\n  <tr>\n    <td>Username</td>\n    <td>{this.state.username}</td>\n  </tr>\n  <tr>\n    <td>Email</td>\n    <td>{this.state.email}</td>\n  </tr>\n  <tr>\n    <td>Phone no.</td>\n    <td>{this.state.phone}</td>\n  </tr>\n  <tr>\n    <td>Age</td>\n    <td>{this.state.age}</td>\n  </tr>\n  </tbody>\n</Table>\n</Container>\n<Container className=\"text-center\" style={{width: \"75%\", marginTop: \"2%\"}}>\n\t\t\t  <h3 as={Row}>Edit user info</h3>\n\t\t\t\t<Form onSubmit={this.submitData}>\n\t\t\t\t<Form.Group as={Row} controlId=\"email\">\n\t\t\t\t    <Form.Control type=\"email\" placeholder=\"Email\"/>\n\t\t\t\t  </Form.Group>\n          <Form.Group as={Row} controlId=\"age\">\n\t\t\t\t   <Form.Control type=\"number\" placeholder=\"Age\"/>\n\t\t\t\t  \t</Form.Group>\n\t\t\t\t  <Form.Group as={Row} controlId=\"phone\">\n\t\t\t\t   <Form.Control type=\"number\" placeholder=\"Phone no.\"/>\n\t\t\t\t  \t</Form.Group>\n\t\t\t\t\t  \n\t\t\t\t  \t<Container>\n\t\t\t\t  <Button variant=\"primary\" type=\"submit\" className=\"login-button\">Submit new user info</Button>\n\t\t\t\t  </Container>\n\t\t\t\t  \n\t\t\t\t</Form>\n\t\t\t\t</Container>\n\n        <Container style={{marginTop: \"2%\"}}>\n        <Button onClick={this.handleLogout} style={{width: \"40%\"}}>Logout</Button>\n        </Container>\n\n          {/* <button onClick={this.checkLoggedin}>\n          Logged in?\n          </button> */}\n      </div>\n      );\n    }\n  }\n  export default Profile;","import React, { Component } from 'react'\nimport { type } from 'jquery';\n\nconst socketPath = 'wss://' + window.location.host + \"/ws/status/\";\n//const socketPath = 'ws://echo.websocket.org/';\n\nclass WebsocketComponent extends Component {\nconstructor(props){\n   super(props);\n}\nsetupWebSocket = () =>{\n    this.ws = new WebSocket(socketPath);\n    this.ws.onopen = () => {\n        console.log('ws connected');\n        this.props.setStatus(\"CONNECTED\");\n        this.ws.send(JSON.stringify({abcd:\"abcd\"}));\n      }\n  \n      this.ws.onmessage = (evt) => {\n        const data = JSON.parse(evt.data);\n        this.props.setStatus(data.message);\n        console.log(typeof(data));\n      }\n  \n      this.ws.onclose = () => {\n        this.props.setStatus(\"DISCONNECTED\");\n        console.log('Disconnected, trying to reconnect.')\n        setTimeout(this.setupWebSocket, 2000);\n      }\n}\n    \n  componentDidMount() {\n    //this.ws = new WebSocket(socketPath);\n    this.setupWebSocket();\n    \n  }\n\n  render() {\n    return (\n      <div>\n      </div>\n    )\n  }\n}\n\nexport default WebsocketComponent;\n","import jQuery from 'jquery'; \nfunction getCookie(name) {\n    var cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n        var cookies = document.cookie.split(';');\n        for (var i = 0; i < cookies.length; i++) {\n            var cookie = jQuery.trim(cookies[i]);\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n}\n\nexport default getCookie;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport LoginForm from './components/login.js';\nimport Profile from './components/profile.js';\nimport WebsocketComponent from './components/websocket.js';\nimport axios from 'axios';\nimport getCookie from './cookie';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst base_url = \"http://127.0.0.1:8000/\";\nconst csrf_url = \"csrf/\";\nconst logged_in_check_url = \"logged_in/\";\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\";\naxios.defaults.headers.common['Content-Type'] = 'application/json';\naxios.defaults.withCredentials = true;\n\nfunction setCsrfToken() {\n  let _csrfToken=getCookie(\"csrftoken\");\n  axios.defaults.headers.common['X-CSRFTOKEN'] = _csrfToken;\n  console.log(_csrfToken,\"_csrfToken\")\n  }\n\nclass App extends React.Component{\n\nsetLoggedIn = (logged_in) =>{\n  this.setState({logged_in: logged_in});\n}\n  constructor(props) {\n    super(props);\n    this.state = {\n    logged_in: false,\n    status: 'DISCONNECTED',\n  };\n  \n    axios.post(logged_in_check_url)\n      .then(response => {\n      console.log(response);\n      this.setLoggedIn(true);\n      this.setStatus(\"logged_in\");\n      setCsrfToken();\n  }).catch(err => {\n    // what now?\n    console.log(err);\n    setCsrfToken();\n});\n\n}\nsetStatus = (status)=>{\n  console.log(\"************ changng to:\",status);\n  this.setState({status: status});\n}\n  render() {\n    return (\n      <div className=\"App\">\n        <h3 style={{marginTop: \"1%\"}}><span class={dot_class[this.state.status]}></span>\n            {this.state.status == \"DISCONNECTED\" && \"Login or register\"}\n            {this.state.status == \"CONNECTED\" && \"Edit user details\"}\n            {this.state.status == \"CHANGED_DETAILS\" && \"User details have been set\"}\n            </h3>\n       {!this.state.logged_in && <LoginForm setLoggedIn={this.setLoggedIn} />}\n       {this.state.logged_in && <div><WebsocketComponent setStatus={this.setStatus}/><Profile setLoggedIn={this.setLoggedIn}/></div>}\n      </div>\n    );\n  }\n}\n\nconst dot_class = {\n  \"DISCONNECTED\": \"greyDot\",\n  \"CONNECTED\": \"greenDot\",\n  \"CHANGED_DETAILS\": \"blueDot\",\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}